{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2024-09-23T07:35:55.758Z",
    "end": "2024-09-23T07:36:32.662Z",
    "duration": 36904,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "69150618-c4e3-4128-a2c3-4b3e7ee968e3",
      "title": "",
      "fullFile": "cypress\\e2e\\Advisor\\Advisor_Event_TS001.cy.js",
      "file": "cypress\\e2e\\Advisor\\Advisor_Event_TS001.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19e37af6-16a0-44a9-b976-3f480ba2e37b",
          "title": "Advisor_Event_TS001",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Advisor_Event_TC001_To verify the Event page",
              "fullTitle": "Advisor_Event_TS001 Advisor_Event_TC001_To verify the Event page",
              "timedOut": null,
              "duration": 12427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress\\\\e2e\\\\Advisor\\\\Advisor_Event_TS001.cy.js\"\n}",
              "code": "cy.on('uncaught:exception', (err, runnable) => {\n  return false;\n});\ncy.NotanadvisorclientLogin();\ncy.viewport(1500, 785);\ncy.wait(2000);\n_Event.default.Event.click();\ncy.url().should('include', 'https://advisor.forastaging.net/events');\n_Event.default.Eventheader.should('be.visible');\ncy.wait(2000);\n/*Event.Today.should('be.visible')\nEvent.Filter.should('be.visible')\nEvent.Arrow.should('be.visible')\nEvent.Calander.should('be.visible')\nEvent.List.should('be.visible')\nEvent.Timeslot.should('contain.text', '1 AM'); \nEvent.Timeslot.should('contain.text', '2 AM'); \nEvent.Timeslot.should('contain.text', '3 AM'); \nEvent.Timeslot.should('contain.text', '4 AM'); \nEvent.Timeslot.should('contain.text', '5 AM'); \nEvent.Timeslot.should('contain.text', '6 AM'); \nEvent.Timeslot.should('contain.text', '7 AM'); \nEvent.Timeslot.should('contain.text', '8 AM'); \nEvent.Timeslot.should('contain.text', '9 AM'); \nEvent.Timeslot.should('contain.text', '10 AM'); \nEvent.Timeslot.should('contain.text', '11 AM'); \nEvent.Timeslot.should('contain.text', '12 AM'); \nEvent.Timeslot.should('contain.text', '1 PM'); \nEvent.Timeslot.should('contain.text', '2 PM'); \nEvent.Timeslot.should('contain.text', '3 PM'); \nEvent.Timeslot.should('contain.text', '4 PM'); \nEvent.Timeslot.should('contain.text', '5 PM'); \nEvent.Timeslot.should('contain.text', '6 PM'); \nEvent.Timeslot.should('contain.text', '7 PM'); \nEvent.Timeslot.should('contain.text', '8 PM'); \nEvent.Timeslot.should('contain.text', '9 PM'); \nEvent.Timeslot.should('contain.text', '10 PM'); \nEvent.Timeslot.should('contain.text', '11 PM'); \nEvent.Dateheader.should('be.visible')\nEvent.Arrow.eq(0).click()\ncy.wait(2000)\nEvent.Filter.click()\ncy.wait(2000)\n\nEvent.Generaltraining.should('be.visible')\nEvent.Livesupport.should('be.visible')\nEvent.certifiedtraining.should('be.visible')\nEvent.Checkbox.eq(0).click()\nEvent.Checkbox.eq(1).click()\nEvent.Reset.should('be.visible')\ncy.wait(2000)\nEvent.Applybutton.should('be.visible').click()\nEvent.NewEvent.find('div.absolute') .should('have.css', 'background-color', 'rgb(33, 102, 219)')\nEvent.Filtercancelbutton.click()\ncy.wait(2000)\nEvent.Filter.click()\nEvent.Generaltraining.should('be.visible')\nEvent.Livesupport.should('be.visible')\nEvent.certifiedtraining.should('be.visible')\nEvent.Checkbox.eq(0).click()\nEvent.Checkbox.eq(2).click()\ncy.wait(2000)\nEvent.Applybutton.should('be.visible').click()\ncy.wait(2000)\nEvent.Livesupportfield.eq(1).scrollIntoView().should('have.css', 'background-color', 'rgb(51, 126, 83)'); \ncy.wait(2000)\nEvent.Filter.click()\nEvent.Generaltraining.should('be.visible')\nEvent.Livesupport.should('be.visible')\nEvent.certifiedtraining.should('be.visible')\nEvent.Checkbox.eq(0).click()\nEvent.Checkbox.eq(1).click()\ncy.wait(2000)\nEvent.Applybutton.should('be.visible').click()\ncy.get('div.rbc-event-content') \n  .find('div.pl-1')   .find('div.absolute')\n  .should('have.css', 'background-color', 'rgb(66, 58, 49)'); \nEvent.Filter.click()\nEvent.Reset.click()\ncy.wait(2000)\ncy.get('div.size-4.rounded-full.bg-black')\n.eq(0)  // First div\n.should('have.css', 'background-color', 'rgb(66, 58, 49)');\n\ncy.get('div.size-4.rounded-full.bg-black')\n.eq(1)  // Second div\n.should('have.css', 'background-color', 'rgb(51, 126, 83)');\n\n// Third color validation\ncy.get('div.size-4.rounded-full.bg-black')\n.eq(2)  // Third div\n.should('have.css', 'background-color', 'rgb(33, 102, 219)');\nEvent.Today.click()\ncy.wait(2000)\nconst currentTime = new Date();\nconst currentHour = currentTime.getHours();\nconst currentMinute = currentTime.getMinutes();\n\ncy.log(`Current time: ${currentHour}:${currentMinute}`);\n\ncy.get('.rbc-now')\n  .should('be.visible') \n  .scrollIntoView() \n  .then(($redLine) => {\n    const redLineOffset = $redLine.offset().top;   \n    cy.log(`Red line offset (top): ${redLineOffset}`);\n     const redLinePosition = $redLine.position().top;\n    cy.log(`Red line position relative to parent (top): ${redLinePosition}`);\n\n      });\n      Event.Eventcalender.click()\n      Event.Certifiedpopupheader.should('be.visible')\n      Event.icons.should('be.visible')\n      Event.Copytogooglecalendar.click()\n              //const specificLinkSelector = 'a[href=\"&authuser=test.qa0618@forastaging.net\"]';\n\n        const specificLinkSelector = 'a[href=\"https://calendar.google.com/calendar/render?action=TEMPLATE&path=%2Fcalendar%2Faction%2Fcompose&text=certified+1&dates=20240918T133000000Z%2F20240918T143000000Z\"]';\n        cy.get(specificLinkSelector).should('have.attr', 'href').then((href) => {\n          cy.request({ url: href, failOnStatusCode: false }).then((response) => {\n            if (response.status !== 200) {\n              cy.log(`Broken link found: ${href}`);\n            }\n          });\n          cy.wait(2000)\nEvent.Closeicon.click()\n        })*/",
              "err": {},
              "uuid": "589227a8-f90b-4358-b4ca-85164340e101",
              "parentUUID": "19e37af6-16a0-44a9-b976-3f480ba2e37b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Advisor_Event_TC002_To verify the Event List page",
              "fullTitle": "Advisor_Event_TS001 Advisor_Event_TC002_To verify the Event List page",
              "timedOut": null,
              "duration": 20722,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress\\\\e2e\\\\Advisor\\\\Advisor_Event_TS001.cy.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"\\\\Advisor\\\\Advisor_Event_TS001.cy.js\\\\Advisor_Event_TS001 -- Advisor_Event_TC002_To verify the Event List page (failed).png\"\n      ]\n    ]\n  }\n]",
              "code": "cy.on('uncaught:exception', (err, runnable) => {\n  return false;\n});\ncy.viewport(1500, 785);\ncy.wait(2000);\n_Event.default.List.click();\ncy.wait(1000);\n_Event.default.Arrow.eq(0).click();\n///Event.Arrow.eq(0).click()\n///Event.Arrow.eq(0).click()\ncy.wait(2000);\n_Event.default.Pastevent.should('be.visible');\n_Event.default.Filter.click();\n_Event.default.Checkbox.eq(0).click();\n_Event.default.Checkbox.eq(1).click();\ncy.wait(2000);\n_Event.default.Applybutton.should('be.visible').click();\ncy.wait(2000);\n_Event.default.certifiedtrainingresult.should('be.visible');\n_Event.default.Filtercancelbutton.click();\ncy.wait(2000);\n_Event.default.Filter.click();\n_Event.default.Generaltraining.should('be.visible');\n_Event.default.Livesupport.should('be.visible');\n_Event.default.certifiedtraining.should('be.visible');\n_Event.default.Checkbox.eq(0).click();\n_Event.default.Checkbox.eq(2).click();\ncy.wait(2000);\n_Event.default.Applybutton.should('be.visible').click();\ncy.wait(2000);\n_Event.default.Livesupportlistresult.should('be.visible');\ncy.wait(2000);\n_Event.default.Filter.click();\n_Event.default.Generaltraining.should('be.visible');\n_Event.default.Livesupport.should('be.visible');\n_Event.default.certifiedtraining.should('be.visible');\n_Event.default.Checkbox.eq(0).click();\n_Event.default.Checkbox.eq(1).click();\ncy.wait(2000);\n_Event.default.Applybutton.should('be.visible').click();\ncy.wait(1000);\n_Event.default.Generaltraininglistresult.should('be.visible');\n_Event.default.Filtercancelbutton.click();\nconst test = _Event.default.test;\ncy.log(test);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `//span[normalize-space()='Live Support']`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `//span[normalize-space()='Live Support']`, but never found it.\n    at Context.eval (webpack://advisor/./cypress/e2e/Advisor/Advisor_Event_TS001.cy.js:177:28)",
                "diff": null
              },
              "uuid": "37bff017-2c41-4e34-885f-8b035c6abc9a",
              "parentUUID": "19e37af6-16a0-44a9-b976-3f480ba2e37b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "589227a8-f90b-4358-b4ca-85164340e101"
          ],
          "failures": [
            "37bff017-2c41-4e34-885f-8b035c6abc9a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 33149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}